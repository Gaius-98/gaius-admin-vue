import type { SchemaProperties } from "@/components/SchemaForm/schema"
import type { Obj } from "@/model";
import dictApi from "@/views/System/api/dict";
export interface ControlCfgSchema{
    type:string;
    properties:Obj<SchemaProperties>;
}
export default [
    {
        type:'input',
        properties:{
            'formItemProp.label':{
                type:'string',
                label:'标签文本',
            },
            'formItemProp.name':{
                type:'string',
                label:'字段名',
            },
            'controlProp.allowClear':{
                type:'switch',
                label:'可清除',
            },
            'controlProp.bordered':{
                type:'switch',
                label:'边框',
            },
            'controlProp.disabled':{
                type:'switch',
                label:'禁用',
            },
            'controlProp.size':{
                type:'radio',
                label:'大小',
                component:{
                    dataSource:[
                        {
                            label:'大',
                            value:'large'
                        },
                        {
                            label:'中',
                            value:'middle'
                        },
                        {
                            label:'小',
                            value:'small'
                        }
                    ]
                }
            },
            'controlProp.maxlength':{
                type:'number',
                label:'最大长度',
            },
        } 
    },
    {
        type:'select',
        properties:{
            'formItemProp.label':{
                type:'string',
                label:'标签文本',
            },
            'formItemProp.name':{
                type:'string',
                label:'字段名',
            },
            'controlProp.allowClear':{
                type:'switch',
                label:'可清除',
            },
            'controlProp.bordered':{
                type:'switch',
                label:'边框',
            },
            'controlProp.disabled':{
                type:'switch',
                label:'禁用',
            },
            'controlProp.size':{
                type:'radio',
                label:'大小',
                component:{
                    dataSource:[
                        {
                            label:'大',
                            value:'large'
                        },
                        {
                            label:'中',
                            value:'middle'
                        },
                        {
                            label:'小',
                            value:'small'
                        }
                    ]
                }
            },
            'controlProp.virtual':{
                type:'switch',
                label:'虚拟滚动',
            },
            'controlProp.mode':{
                type:'select',
                label:'模式',
                component:{
                    dataSource:[
                        {
                            label:'多选',
                            value:'multiple'
                        },
                        {
                            label:'标签',
                            value:'tag'
                        }
                    ],
                    allowClear:true
                }
            },
            'controlProp.dict':{
                type:'select',
                label:'字典',
                component:{
                    asyncData: async () =>{
                      const {code,data,msg} = await  dictApi.getDictTypeList()
                      if(code == 200){
                        return data.map(item => {
                            return {
                                label:item.dictTypeDesc,
                                value:item.dictType
                            }
                        })
                      }else{
                        return []
                      }
                    },
                }
            }
        } 
    },
    {
        type:'switch',
        properties:{
            'formItemProp.label':{
                type:'string',
                label:'标签文本',
            },
            'formItemProp.name':{
                type:'string',
                label:'字段名',
            },
            'controlProp.disabled':{
                type:'switch',
                label:'禁用',
            },
            'controlProp.size':{
                type:'radio',
                label:'大小',
                component:{
                    dataSource:[
                        {
                            label:'大',
                            value:'large'
                        },
                        {
                            label:'中',
                            value:'middle'
                        },
                        {
                            label:'小',
                            value:'small'
                        }
                    ]
                }
            },
        } 
    },
    {
        type:'radio',
        properties:{
            'formItemProp.label':{
                type:'string',
                label:'标签文本',
            },
            'formItemProp.name':{
                type:'string',
                label:'字段名',
            },
            'controlProp.disabled':{
                type:'switch',
                label:'禁用',
            },
            'controlProp.size':{
                type:'radio',
                label:'大小',
                component:{
                    dataSource:[
                        {
                            label:'大',
                            value:'large'
                        },
                        {
                            label:'中',
                            value:'middle'
                        },
                        {
                            label:'小',
                            value:'small'
                        }
                    ]
                }
            },
            'controlProp.buttonStyle':{
                type:'radio',
                label:'样式',
                component:{
                    dataSource:[
                        {
                            label:'描边',
                            value:'outline'
                        },
                        {
                            label:'填色',
                            value:'solid'
                        },

                    ]
                }
            },
            'controlProp.optionType':{
                type:'radio',
                label:'类型',
                component:{
                    dataSource:[
                        {
                            label:'默认',
                            value:'default'
                        },
                        {
                            label:'按钮',
                            value:'button'
                        },
                    ]
                }
            },
            'controlProp.dict':{
                type:'select',
                label:'字典',
                component:{
                    asyncData: async () =>{
                      const {code,data,msg} = await  dictApi.getDictTypeList()
                      if(code == 200){
                        return data.map(item => {
                            return {
                                label:item.dictTypeDesc,
                                value:item.dictType
                            }
                        })
                      }else{
                        return []
                      }
                    },
                }
            }
        } 
    },
    {
        type:'checkbox',
        properties:{
            'formItemProp.label':{
                type:'string',
                label:'标签文本',
            },
            'formItemProp.name':{
                type:'string',
                label:'字段名',
            },
            'controlProp.disabled':{
                type:'switch',
                label:'禁用',
            },
            'controlProp.dict':{
                type:'select',
                label:'字典',
                component:{
                    asyncData: async () =>{
                      const {code,data,msg} = await  dictApi.getDictTypeList()
                      if(code == 200){
                        return data.map(item => {
                            return {
                                label:item.dictTypeDesc,
                                value:item.dictType
                            }
                        })
                      }else{
                        return []
                      }
                    },
                }
            }
        } 
    },
    {
        type:'number',
        properties:{
            'formItemProp.label':{
                type:'string',
                label:'标签文本',
            },
            'formItemProp.name':{
                type:'string',
                label:'字段名',
            },
            'controlProp.bordered':{
                type:'switch',
                label:'边框',
            },
            'controlProp.disabled':{
                type:'switch',
                label:'禁用',
            },
            'controlProp.controls':{
                type:'switch',
                label:'控件',
            },
            'controlProp.size':{
                type:'radio',
                label:'大小',
                component:{
                    dataSource:[
                        {
                            label:'大',
                            value:'large'
                        },
                        {
                            label:'中',
                            value:'middle'
                        },
                        {
                            label:'小',
                            value:'small'
                        }
                    ]
                }
            },
            'controlProp.max':{
                type:'number',
                label:'最大值',
            },
            'controlProp.min':{
                type:'number',
                label:'最小值',
            },
            'controlProp.precision':{
                type:'number',
                label:'精度',
            },
            'controlProp.step':{
                type:'number',
                label:'步长',
            },
        } 
    },
    {
        type:'date',
        properties:{
            'formItemProp.label':{
                type:'string',
                label:'标签文本',
            },
            'formItemProp.name':{
                type:'string',
                label:'字段名',
            },
            'controlProp.bordered':{
                type:'switch',
                label:'边框',
            },
            'controlProp.disabled':{
                type:'switch',
                label:'禁用',
            },
            'controlProp.format':{
                type:'string',
                label:'显示格式化'
            },
            'controlProp.valueFormat':{
                type:'string',
                label:'值格式化'
            },
            'controlProp.size':{
                type:'radio',
                label:'大小',
                component:{
                    dataSource:[
                        {
                            label:'大',
                            value:'large'
                        },
                        {
                            label:'中',
                            value:'middle'
                        },
                        {
                            label:'小',
                            value:'small'
                        }
                    ]
                }
            },
             'controlProp.mode':{
                type:'radio',
                label:'面板',
                component:{
                    dataSource:[
                        {
                            label:'时间',
                            value:'time'
                        },
                        {
                            label:'日期',
                            value:'date'
                        },
                        
                        {
                            label:'月',
                            value:'month'
                        },
                        {
                            label:'年',
                            value:'year'
                        }
                    ]
                }
            },
             'controlProp.picker':{
                type:'radio',
                label:'类型',
                component:{
                    dataSource:[
                        {
                            label:'日期',
                            value:'date'
                        },
                        {
                            label:'周',
                            value:'week'
                        },
                        {
                            label:'月',
                            value:'month'
                        },
                        {
                            label:'年',
                            value:'year'
                        }
                    ]
                }
            },
        }
    },
    {
        type:'grid',
        properties:{
            'controlProp.gutter':{
                type:'number',
                label:'栅格间距',
            },
            'controlProp.colNumber':{
                type:'radio',
                label:'列配置',
                component:{
                    dataSource:[
                        {
                            label:'一列',
                            value:1
                        },
                        {
                            label:'两列',
                            value:2
                        },
                        {
                            label:'三列',
                            value:3
                        },
                        {
                            label:'四列',
                            value:4
                        }
                    ]
                }
            },
        }
    },
    {
        type:'card',
        properties:{
            'controlProp.title':{
                type:'string',
                label:'标题',
            },
            'controlProp.bordered':{
                type:'switch',
                label:'边框',
            },
            'controlProp.hoverable':{
                type:'switch',
                label:'悬浮效果',
            },
        }
    }
] as ControlCfgSchema[]